var mergeObjects = function (target, ...sources) {
   for (let source of sources) {
       if (source) {
           let keys = Object.keys(source);
           for (let key of keys) {
               if (Object.prototype.hasOwnProperty.call(source, key)) {
                   if (typeof source[key] === 'object' && source[key] !== null) {
                       target[key] = mergeObjects(target[key] || {}, source[key]);
                   } else {
                       target[key] = source[key];
                   }
               }
           }
       }
   }
   return target;
};

var createCountdownElement = function (container, config, type) {
   var div = document.createElement("div"),
       spanAmount = document.createElement("span"),
       spanWord = document.createElement("span"),
       innerDiv = document.createElement("div");

   innerDiv.appendChild(spanAmount);
   innerDiv.appendChild(spanWord);
   div.appendChild(innerDiv);

   div.classList.add(config.sectionClass);
   div.classList.add(type);
   spanAmount.classList.add(config.amountClass);
   spanWord.classList.add(config.wordClass);

   container.appendChild(div);
   return {
       full: div,
       amount: spanAmount,
       word: spanWord
   };
};

var simplyCountdown = function (selector, options) {
   var defaultOptions = {
       year: 2015,
       month: 6,
       day: 28,
       hours: 0,
       minutes: 0,
       seconds: 0,
       words: {
           days: { singular: "day", plural: "days" },
           hours: { singular: "hour", plural: "hours" },
           minutes: { singular: "minute", plural: "minutes" },
           seconds: { singular: "second", plural: "seconds" }
       },
       plural: true,
       inline: false,
       enableUtc: false,
       onEnd: function () { },
       refresh: 1000,
       inlineClass: "simply-countdown-inline",
       sectionClass: "simply-section",
       amountClass: "simply-amount",
       wordClass: "simply-word",
       zeroPad: false,
       countUp: false
   };

   var config = mergeObjects({}, defaultOptions, options);
   var elements = typeof selector === "string" ? document.querySelectorAll(selector) : selector;

   var targetDate = new Date(config.year, config.month - 1, config.day, config.hours, config.minutes, config.seconds);
   if (config.enableUtc) {
       targetDate = new Date(Date.UTC(config.year, config.month - 1, config.day, config.hours, config.minutes, config.seconds));
   }

   var updateCountdown = function (element) {
       var intervals = {
           days: createCountdownElement(element, config, "simply-days-section"),
           hours: createCountdownElement(element, config, "simply-hours-section"),
           minutes: createCountdownElement(element, config, "simply-minutes-section"),
           seconds: createCountdownElement(element, config, "simply-seconds-section")
       };

       var update = function () {
           var now = config.enableUtc ? new Date(Date.UTC(new Date().getFullYear(), new Date().getMonth(), new Date().getDate(), new Date().getUTCHours(), new Date().getUTCMinutes(), new Date().getUTCSeconds())) : new Date();
           var remainingSeconds = Math.floor((targetDate - now) / 1000);

           if (remainingSeconds <= 0 && !config.countUp) {
               remainingSeconds = 0;
               clearInterval(intervalId);
               config.onEnd();
           }

           var days = Math.floor(remainingSeconds / 86400);
           remainingSeconds %= 86400;
           var hours = Math.floor(remainingSeconds / 3600);
           remainingSeconds %= 3600;
           var minutes = Math.floor(remainingSeconds / 60);
           var seconds = remainingSeconds % 60;

           var wordDays = days === 1 ? config.words.days.singular : config.words.days.plural;
           var wordHours = hours === 1 ? config.words.hours.singular : config.words.hours.plural;
           var wordMinutes = minutes === 1 ? config.words.minutes.singular : config.words.minutes.plural;
           var wordSeconds = seconds === 1 ? config.words.seconds.singular : config.words.seconds.plural;

           intervals.days.amount.textContent = config.zeroPad && days < 10 ? '0' + days : days;
           intervals.days.word.textContent = wordDays;
           intervals.hours.amount.textContent = config.zeroPad && hours < 10 ? '0' + hours : hours;
           intervals.hours.word.textContent = wordHours;
           intervals.minutes.amount.textContent = config.zeroPad && minutes < 10 ? '0' + minutes : minutes;
           intervals.minutes.word.textContent = wordMinutes;
           intervals.seconds.amount.textContent = config.zeroPad && seconds < 10 ? '0' + seconds : seconds;
           intervals.seconds.word.textContent = wordSeconds;

           if (config.inline) {
               element.textContent = `${days} ${wordDays}, ${hours} ${wordHours}, ${minutes} ${wordMinutes}, ${seconds} ${wordSeconds}.`;
           }
       };

       var intervalId = setInterval(update, config.refresh);
       update();
   };

   Array.prototype.forEach.call(elements, updateCountdown);
};

window.simplyCountdown = simplyCountdown;

if (window.jQuery) {
   (function ($) {
       $.fn.simplyCountdown = function (options) {
           return simplyCountdown(this.selector, options);
       };
   })(jQuery);
}
